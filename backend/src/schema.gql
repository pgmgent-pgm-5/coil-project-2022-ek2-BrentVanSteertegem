# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Brick {
  id: Int!
  name: String!
  description: String!
  price: Float!
  color: String!
  quantity: Int!
  category: Category!
  images: [String!]!
  variations: [Brick!]!
}

type Category {
  id: Int!
  name: String!
  description: String
  mainCategory: Category
  bricks: [Brick!]
}

type User {
  id: Int!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  role: Role!
}

enum Role {
  ADMIN
  GUEST
}

type Order {
  id: Int!
  firstName: String!
  lastName: String!
  email: String!
  street: String!
  houseNumber: String!
  zipCode: String!
  city: String!
  billingFirstName: String
  billingLastName: String
  billingStreet: String
  billingHouseNumber: String
  billingZipCode: String
  billingCity: String
  shippingMethod: ShippingMethod!
  shippingPrice: Float!
  promoCode: String
  cardNumber: String!
  cardExpirationMonth: Int!
  cardExpirationYear: Int!
  cardSecurityCode: String!
  total: Float!
  items: [String!]!
}

enum ShippingMethod {
  PICKUP
  STANDARD
  NEXTDAY
}

type Query {
  getCategories: [Category!]!
  getCategoryById(id: Float!): Category!
  getCategoryByName(name: String!): Category!
  getUsers: [User!]!
  getUserById(id: Float!): User!
  getUserByEmail(email: String!): User!
  getBricks: [Brick!]!
  getBrickById(id: Float!): Brick!
  getOrders: [Order!]!
  getOrderById(id: Float!): Order!
}

type Mutation {
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  removeCategory(id: Float!): Category!
  login(email: String!, password: String!): String!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Float!): User!
  createBrick(createBrickInput: CreateBrickInput!): Brick!
  updateBrick(updateBrickInput: UpdateBrickInput!): Brick!
  removeBrick(id: Float!): Brick!
  createOrder(createOrderInput: CreateOrderInput!): Order!
  removeOrder(id: Float!): Order!
}

input CreateCategoryInput {
  name: String!
  description: String
  mainCategoryId: Int
}

input UpdateCategoryInput {
  id: Int!
  name: String
  description: String
  mainCategoryId: Int
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  role: Role!
}

input UpdateUserInput {
  id: Int!
  firstName: String
  lastName: String
  email: String
  password: String
  role: Role
}

input CreateBrickInput {
  name: String!
  description: String
  price: Float!
  color: String!
  quantity: Int!
  categoryId: Int!
  images: [String!]!
  variationIds: [Int!]
}

input UpdateBrickInput {
  id: Int!
  name: String
  description: String
  price: Float
  color: String
  quantity: Int
  categoryId: Int
  images: [String!]
  variationIds: [Int!]
}

input CreateOrderInput {
  firstName: String!
  lastName: String!
  email: String!
  street: String!
  houseNumber: String!
  zipCode: String!
  city: String!
  billingFirstName: String
  billingLastName: String
  billingStreet: String
  billingHouseNumber: String
  billingZipCode: String
  billingCity: String
  shippingMethod: ShippingMethod!
  shippingPrice: Float!
  promoCode: String
  cardNumber: String!
  cardExpirationMonth: Int!
  cardExpirationYear: Int!
  cardSecurityCode: String!
  total: Float!
  items: [String!]!
}